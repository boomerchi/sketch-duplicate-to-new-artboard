// Duplicate to new artboard
//
// Sketch plugin to duplicate the current selection(s) to new artboard(s).
//
// Copyright (c) 2016 Mike Gowen, Delighted Inc.

onRun = function (context) {

  doc = context.document
  selection = context.selection

  if ([selection count] == 0) {
    [doc showMessage:"Please make a selection."]
  } else {
    if (artboardSelectionCount() > 0) {
      [doc showMessage:"This plugin does not work on artboard selections."]
    } else {
      if ([[[doc currentPage] artboards] count] == 0) {
        [doc showMessage:"You need to have at least one artboard."]
      } else {
        for (var i=0; i < [selection count]; i++){
          selectedItem = selection[i]
          newArtboard = createNewArtboardFromSelection(selectedItem)
          copySelectionToNewArtboard(selectedItem, newArtboard)
        }
      }
    }
  }

  function artboardSelectionCount() {
    artboardCount = 0
    for (var i=0; i < [selection count]; i++){
      if (selection[i].className() == "MSArtboardGroup") {
        artboardCount++
      }
    }
    return artboardCount
  }

  function createNewArtboardFromSelection(selectedItem) {
    selectedItemRect = [selectedItem absoluteRect]
    newArtboardWidth = [selectedItemRect width]
    newArtboardHeight = [selectedItemRect height])
    newArtboardX = rightmostArtboardX() + 100
    newArtboardY = topmostArtboardY()

    newArtboard = [MSArtboardGroup new]
    newArtboardFrame = [newArtboard frame]
    [newArtboardFrame setWidth:newArtboardWidth]
    [newArtboardFrame setHeight:newArtboardHeight]
    [newArtboardFrame setX:newArtboardX]
    [newArtboardFrame setY:newArtboardY]

    page = [doc currentPage]
    [page addLayers:[NSArray arrayWithObjects:newArtboard]]

    return newArtboard
  }

  function rightmostArtboardX() {
    artboards = [[doc currentPage] artboards]
    firstArtboard = artboards[0]
    firstArtboardRect = [firstArtboard absoluteRect]
    maxXPos = [firstArtboardRect maxX]
    loop = [artboards objectEnumerator]
    while (artboard = [loop nextObject]) {
      artboardRect = [artboard absoluteRect]
      artboardMaxX = [artboardRect maxX]
      if (artboardMaxX >= maxXPos) {
        maxXPos = artboardMaxX
      }
    }
    return maxXPos
  }

  function topmostArtboardY() {
    artboards = [[doc currentPage] artboards]
    firstArtboard = artboards[0]
    firstArtboardRect = [firstArtboard absoluteRect]
    minYPos = [firstArtboardRect minY]
    loop = [artboards objectEnumerator]
    while (artboard = [loop nextObject]) {
      artboardRect = [artboard absoluteRect]
      artboardMinY = [artboardRect minY]
      if (artboardMinY <= minYPos) {
        minYPos = artboardMinY
      }
    }
    return minYPos
  }

  function copySelectionToNewArtboard(selectedItem, newArtboard) {
    selectedItemCopy = [selectedItem duplicate]
    [[newArtboard layers] addObject:selectedItemCopy]

    selectedItemCopyFrame = [selectedItemCopy frame]
    [selectedItemCopyFrame setX:0]
    [selectedItemCopyFrame setY:0]

    parentGroup = [selectedItem parentGroup]
    [parentGroup removeLayer:selectedItemCopy]
  }
}
